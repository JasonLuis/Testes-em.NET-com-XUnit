using JornadaMilhasV1.Modelos;

namespace JormadaMilhas.Test
{
    public class OfertaViagemTest
    {
        [Fact]
        public void TestantoOfertaValida()
        {
            //cenário - arrange
            Rota rota = new Rota("OrigemTeste", "DestinoTeste");
            Periodo periodo = new Periodo(new DateTime(2024, 2, 1), new DateTime(2024, 2, 5));

            double preco = 100.0;
            var validacao = true;

            //ação - act
            OfertaViagem oferta = new OfertaViagem(rota, periodo, preco);

            //validação - assert
            // Método do proprio XUnit
            Assert.Equal(validacao, oferta.EhValido);
        }

        [Fact]
        public void TestantoOfertaComRotaNula()
        {
            //cenário
            Rota rota = null;
            Periodo periodo = new Periodo(new DateTime(2024, 2, 1), new DateTime(2024, 2, 5));

            double preco = 100.0;

            //ação
            OfertaViagem oferta = new OfertaViagem(rota, periodo, preco);

            //validação
            // Método do proprio XUnit
            Assert.Contains("A oferta de viagem não possui rota ou período válidos.", oferta.Erros.Sumario);

            Assert.False(oferta.EhValido);
        }

        [Fact]
        public void TestantoOfertaComDataInvalida()
        {
            //cenário
            Rota rota = null;
            Periodo periodo = new Periodo(new DateTime(2025, 2, 1), new DateTime(2024, 2, 5));

            double preco = 100.0;

            //ação
            OfertaViagem oferta = new OfertaViagem(rota, periodo, preco);

            //validação
            // Método do proprio XUnit
            Assert.Contains("Erro: Data de ida não pode ser maior que a data de volta.", periodo.Erros.Sumario);

            Assert.False(oferta.EhValido);
        }
    }
}